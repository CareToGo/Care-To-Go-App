{"version":3,"names":["parseAngle","angle","endsWith","parseFloat","Math","PI","isTranslateX","transform","Object","keys","indexOf","isTranslateY","isScale","isScaleX","isScaleY","isSkewX","isSkewY","isRotate","isRotateZ","exhaustiveCheck","a","Error","identityMatrix","translateXMatrix","x","translateYMatrix","y","scaleMatrix","s","scaleXMatrix","scaleYMatrix","skewXMatrix","tan","skewYMatrix","rotateZMatrix","r","cos","sin","dot3","row","col","matrixVecMul3","m","v","multiply3","m1","m2","col0","col1","col2","serializeToSVGMatrix","svgMatrix","transforms","processTransform2d","reduce","acc","translateX","translateY","scale","scaleX","scaleY","skewX","skewY","rotate","rotateZ","isMatrix3","arg","length","Array","decompose2d","b","c","d","E","F","G","H","Q","sqrt","pow","R","a1","atan2","a2","theta","phi","adjugate","basisToPoints","p1","p2","p3","p4","transform2d","params","canvas","projected","t"],"sources":["Matrix3.ts"],"sourcesContent":["/* eslint-disable prefer-destructuring */\nimport type { Vector } from \"./Vectors\";\n\nexport type Vec3 = readonly [number, number, number];\n\nexport type Matrix3 = readonly [Vec3, Vec3, Vec3];\n\nexport interface TransformProp {\n  transform: Transforms2d;\n}\n\ntype Transformations = {\n  translateX: number;\n  translateY: number;\n  scale: number;\n  skewX: string;\n  skewY: string;\n  scaleX: number;\n  scaleY: number;\n  rotateZ: string;\n  rotate: string;\n};\n\nexport type Transforms2d = (\n  | Pick<Transformations, \"translateX\">\n  | Pick<Transformations, \"translateY\">\n  | Pick<Transformations, \"scale\">\n  | Pick<Transformations, \"scaleX\">\n  | Pick<Transformations, \"scaleY\">\n  | Pick<Transformations, \"skewX\">\n  | Pick<Transformations, \"skewY\">\n  | Pick<Transformations, \"rotate\">\n  | Pick<Transformations, \"rotateZ\">\n)[];\n\nexport const parseAngle = (angle: string) => {\n  \"worklet\";\n  if (angle.endsWith(\"deg\")) {\n    return parseFloat(angle) * (Math.PI / 180);\n  }\n  return parseFloat(angle);\n};\n\nexport const isTranslateX = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"translateX\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"translateX\") !== -1;\n};\n\nexport const isTranslateY = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"translateY\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"translateY\") !== -1;\n};\n\nexport const isScale = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"scale\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"scale\") !== -1;\n};\n\nexport const isScaleX = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"scaleX\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"scaleX\") !== -1;\n};\n\nexport const isScaleY = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"scaleY\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"scaleY\") !== -1;\n};\n\nexport const isSkewX = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"skewX\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"skewX\") !== -1;\n};\n\nexport const isSkewY = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"skewY\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"skewY\") !== -1;\n};\n\nexport const isRotate = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"rotate\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"rotate\") !== -1;\n};\n\nexport const isRotateZ = (\n  transform: Transforms2d[0]\n): transform is Pick<Transformations, \"rotateZ\"> => {\n  \"worklet\";\n  return Object.keys(transform).indexOf(\"rotateZ\") !== -1;\n};\n\nconst exhaustiveCheck = (a: never): never => {\n  \"worklet\";\n  throw new Error(`Unexhaustive handling for ${a}`);\n};\n\nconst identityMatrix: Matrix3 = [\n  [1, 0, 0],\n  [0, 1, 0],\n  [0, 0, 1],\n];\n\nconst translateXMatrix = (x: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [1, 0, x],\n    [0, 1, 0],\n    [0, 0, 1],\n  ];\n};\n\nconst translateYMatrix = (y: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [1, 0, 0],\n    [0, 1, y],\n    [0, 0, 1],\n  ];\n};\n\nconst scaleMatrix = (s: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [s, 0, 0],\n    [0, s, 0],\n    [0, 0, 1],\n  ];\n};\n\nconst scaleXMatrix = (s: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [s, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ];\n};\n\nconst scaleYMatrix = (s: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [1, 0, 0],\n    [0, s, 0],\n    [0, 0, 1],\n  ];\n};\n\nconst skewXMatrix = (s: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [1, Math.tan(s), 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ];\n};\n\nconst skewYMatrix = (s: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [1, 0, 0],\n    [Math.tan(s), 1, 0],\n    [0, 0, 1],\n  ];\n};\n\nconst rotateZMatrix = (r: number): Matrix3 => {\n  \"worklet\";\n  return [\n    [Math.cos(r), -1 * Math.sin(r), 0],\n    [Math.sin(r), Math.cos(r), 0],\n    [0, 0, 1],\n  ];\n};\n\nexport const dot3 = (row: Vec3, col: Vec3) => {\n  \"worklet\";\n  return row[0] * col[0] + row[1] * col[1] + row[2] * col[2];\n};\n\nexport const matrixVecMul3 = (m: Matrix3, v: Vec3) => {\n  \"worklet\";\n  return [dot3(m[0], v), dot3(m[1], v), dot3(m[2], v)] as const;\n};\n\nexport const multiply3 = (m1: Matrix3, m2: Matrix3) => {\n  \"worklet\";\n  const col0 = [m2[0][0], m2[1][0], m2[2][0]] as const;\n  const col1 = [m2[0][1], m2[1][1], m2[2][1]] as const;\n  const col2 = [m2[0][2], m2[1][2], m2[2][2]] as const;\n  return [\n    [dot3(m1[0], col0), dot3(m1[0], col1), dot3(m1[0], col2)],\n    [dot3(m1[1], col0), dot3(m1[1], col1), dot3(m1[1], col2)],\n    [dot3(m1[2], col0), dot3(m1[2], col1), dot3(m1[2], col2)],\n  ] as const;\n};\n\nconst serializeToSVGMatrix = (m: Matrix3) => {\n  \"worklet\";\n  return `matrix(${m[0][0]}, ${m[1][0]}, ${m[0][1]}, ${m[1][1]}, ${m[0][2]}, ${m[1][2]})`;\n};\n\nexport const svgMatrix = (transforms: Transforms2d) => {\n  \"worklet\";\n  return serializeToSVGMatrix(processTransform2d(transforms));\n};\n\nexport const processTransform2d = (transforms: Transforms2d) => {\n  \"worklet\";\n  return transforms.reduce((acc, transform) => {\n    if (isTranslateX(transform)) {\n      return multiply3(acc, translateXMatrix(transform.translateX));\n    }\n    if (isTranslateY(transform)) {\n      return multiply3(acc, translateYMatrix(transform.translateY));\n    }\n    if (isScale(transform)) {\n      return multiply3(acc, scaleMatrix(transform.scale));\n    }\n    if (isScaleX(transform)) {\n      return multiply3(acc, scaleXMatrix(transform.scaleX));\n    }\n    if (isScaleY(transform)) {\n      return multiply3(acc, scaleYMatrix(transform.scaleY));\n    }\n    if (isSkewX(transform)) {\n      return multiply3(acc, skewXMatrix(parseAngle(transform.skewX)));\n    }\n    if (isSkewY(transform)) {\n      return multiply3(acc, skewYMatrix(parseAngle(transform.skewY)));\n    }\n    if (isRotate(transform)) {\n      return multiply3(acc, rotateZMatrix(parseAngle(transform.rotate)));\n    }\n    if (isRotateZ(transform)) {\n      return multiply3(acc, rotateZMatrix(parseAngle(transform.rotateZ)));\n    }\n    return exhaustiveCheck(transform);\n  }, identityMatrix);\n};\n\nconst isMatrix3 = (arg: Matrix3 | Transforms2d): arg is Matrix3 => {\n  \"worklet\";\n  return arg.length === 3 && arg[0] instanceof Array;\n};\n\n// https://math.stackexchange.com/questions/13150/extracting-rotation-scale-values-from-2d-transformation-matrix\nexport const decompose2d = (arg: Matrix3 | Transforms2d) => {\n  \"worklet\";\n  const m = isMatrix3(arg) ? arg : processTransform2d(arg);\n  const a = m[0][0];\n  const b = m[1][0];\n  const c = m[0][1];\n  const d = m[1][1];\n  const translateX = m[0][2];\n  const translateY = m[1][2];\n  const E = (a + d) / 2;\n  const F = (a - d) / 2;\n  const G = (c + b) / 2;\n  const H = (c - b) / 2;\n  const Q = Math.sqrt(Math.pow(E, 2) + Math.pow(H, 2));\n  const R = Math.sqrt(Math.pow(F, 2) + Math.pow(G, 2));\n  const scaleX = Q + R;\n  const scaleY = Q - R;\n  const a1 = Math.atan2(G, F);\n  const a2 = Math.atan2(H, E);\n  const theta = (a2 - a1) / 2;\n  const phi = (a2 + a1) / 2;\n  return [\n    { translateX },\n    { translateY },\n    { rotateZ: -1 * theta },\n    { scaleX },\n    { scaleY },\n    { rotateZ: -1 * phi },\n  ] as const;\n};\n\nconst adjugate = (m: Matrix3) => {\n  \"worklet\";\n  return [\n    [\n      m[1][1] * m[2][2] - m[1][2] * [2][1],\n      m[0][2] * [2][1] - m[0][1] * [2][2],\n      m[0][1] * [1][2] - m[0][2] * [1][1],\n    ],\n    [\n      m[1][2] * [2][0] - m[1][0] * [2][2],\n      m[0][0] * [2][2] - m[0][2] * [2][0],\n      m[0][2] * [1][0] - m[0][0] * [1][2],\n    ],\n    [\n      m[1][0] * [2][1] - m[1][1] * [2][0],\n      m[0][1] * [2][0] - m[0][0] * [2][1],\n      m[0][0] * [1][1] - m[0][1] * [1][0],\n    ],\n  ] as const;\n};\n\ninterface Quadrilateral {\n  p1: Vector;\n  p2: Vector;\n  p3: Vector;\n  p4: Vector;\n}\n\ninterface Parameters {\n  canvas: Quadrilateral;\n  projected: Quadrilateral;\n}\n\nconst basisToPoints = ({ p1, p2, p3, p4 }: Quadrilateral) => {\n  \"worklet\";\n  const m = [\n    [p1.x, p2.x, p3.x],\n    [p1.y, p2.y, p3.y],\n    [1, 1, 1],\n  ] as const;\n  const v = matrixVecMul3(adjugate(m), [p4.x, p4.y, 1]);\n  return multiply3(m, [\n    [v[0], 0, 0],\n    [0, v[1], 0],\n    [0, 0, v[2]],\n  ]);\n};\n\n// https://math.stackexchange.com/questions/296794/finding-the-transform-matrix-from-4-projected-points-with-javascript\n// https://franklinta.com/2014/09/08/computing-css-matrix3d-transforms/\n// http://jsfiddle.net/dFrHS/1/\nexport const transform2d = (params: Parameters) => {\n  \"worklet\";\n  const s = basisToPoints(params.canvas);\n  const d = basisToPoints(params.projected);\n  const t = multiply3(d, adjugate(s));\n  return [\n    [t[0][0] / t[2][2], t[0][1] / t[2][2], t[0][2] / t[2][2]],\n    [t[1][0] / t[2][2], t[1][1] / t[2][2], t[1][2] / t[2][2]],\n    [t[2][0] / t[2][2], t[2][1] / t[2][2], 1],\n  ] as const;\n};\n"],"mappings":"AAmCA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAmB,CAC3C,UACA,GAAIA,KAAK,CAACC,QAAN,CAAe,KAAf,CAAJ,CAA2B,CACzB,MAAOC,CAAAA,UAAU,CAACF,KAAD,CAAV,EAAqBG,IAAI,CAACC,EAAL,CAAU,GAA/B,CAAP,CACD,CACD,MAAOF,CAAAA,UAAU,CAACF,KAAD,CAAjB,CACD,CANM,CAQP,MAAO,IAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAC1BC,SAD0B,CAE2B,CACrD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,YAA/B,IAAiD,CAAC,CAAzD,CACD,CALM,CAOP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAC1BJ,SAD0B,CAE2B,CACrD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,YAA/B,IAAiD,CAAC,CAAzD,CACD,CALM,CAOP,MAAO,IAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CACrBL,SADqB,CAE2B,CAChD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,OAA/B,IAA4C,CAAC,CAApD,CACD,CALM,CAOP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CACtBN,SADsB,CAE2B,CACjD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,QAA/B,IAA6C,CAAC,CAArD,CACD,CALM,CAOP,MAAO,IAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CACtBP,SADsB,CAE2B,CACjD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,QAA/B,IAA6C,CAAC,CAArD,CACD,CALM,CAOP,MAAO,IAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CACrBR,SADqB,CAE2B,CAChD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,OAA/B,IAA4C,CAAC,CAApD,CACD,CALM,CAOP,MAAO,IAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CACrBT,SADqB,CAE2B,CAChD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,OAA/B,IAA4C,CAAC,CAApD,CACD,CALM,CAOP,MAAO,IAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CACtBV,SADsB,CAE2B,CACjD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,QAA/B,IAA6C,CAAC,CAArD,CACD,CALM,CAOP,MAAO,IAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CACvBX,SADuB,CAE2B,CAClD,UACA,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,SAA/B,IAA8C,CAAC,CAAtD,CACD,CALM,CAOP,GAAMS,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAqB,CAC3C,UACA,KAAM,IAAIC,CAAAA,KAAJ,8BAAuCD,CAAvC,CAAN,CACD,CAHD,CAKA,GAAME,CAAAA,cAAuB,CAAG,CAC9B,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAD8B,CAE9B,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAF8B,CAG9B,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAH8B,CAAhC,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAwB,CAC/C,UACA,MAAO,CACL,CAAC,CAAD,CAAI,CAAJ,CAAOA,CAAP,CADK,CAEL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAwB,CAC/C,UACA,MAAO,CACL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CADK,CAEL,CAAC,CAAD,CAAI,CAAJ,CAAOA,CAAP,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAwB,CAC1C,UACA,MAAO,CACL,CAACA,CAAD,CAAI,CAAJ,CAAO,CAAP,CADK,CAEL,CAAC,CAAD,CAAIA,CAAJ,CAAO,CAAP,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,CAAD,CAAwB,CAC3C,UACA,MAAO,CACL,CAACA,CAAD,CAAI,CAAJ,CAAO,CAAP,CADK,CAEL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,CAAD,CAAwB,CAC3C,UACA,MAAO,CACL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CADK,CAEL,CAAC,CAAD,CAAIA,CAAJ,CAAO,CAAP,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACH,CAAD,CAAwB,CAC1C,UACA,MAAO,CACL,CAAC,CAAD,CAAIxB,IAAI,CAAC4B,GAAL,CAASJ,CAAT,CAAJ,CAAiB,CAAjB,CADK,CAEL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACL,CAAD,CAAwB,CAC1C,UACA,MAAO,CACL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CADK,CAEL,CAACxB,IAAI,CAAC4B,GAAL,CAASJ,CAAT,CAAD,CAAc,CAAd,CAAiB,CAAjB,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAwB,CAC5C,UACA,MAAO,CACL,CAAC/B,IAAI,CAACgC,GAAL,CAASD,CAAT,CAAD,CAAc,CAAC,CAAD,CAAK/B,IAAI,CAACiC,GAAL,CAASF,CAAT,CAAnB,CAAgC,CAAhC,CADK,CAEL,CAAC/B,IAAI,CAACiC,GAAL,CAASF,CAAT,CAAD,CAAc/B,IAAI,CAACgC,GAAL,CAASD,CAAT,CAAd,CAA2B,CAA3B,CAFK,CAGL,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHK,CAAP,CAKD,CAPD,CASA,MAAO,IAAMG,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,GAAD,CAAYC,GAAZ,CAA0B,CAC5C,UACA,MAAOD,CAAAA,GAAG,CAAC,CAAD,CAAH,CAASC,GAAG,CAAC,CAAD,CAAZ,CAAkBD,GAAG,CAAC,CAAD,CAAH,CAASC,GAAG,CAAC,CAAD,CAA9B,CAAoCD,GAAG,CAAC,CAAD,CAAH,CAASC,GAAG,CAAC,CAAD,CAAvD,CACD,CAHM,CAKP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAaC,CAAb,CAAyB,CACpD,UACA,MAAO,CAACL,IAAI,CAACI,CAAC,CAAC,CAAD,CAAF,CAAOC,CAAP,CAAL,CAAgBL,IAAI,CAACI,CAAC,CAAC,CAAD,CAAF,CAAOC,CAAP,CAApB,CAA+BL,IAAI,CAACI,CAAC,CAAC,CAAD,CAAF,CAAOC,CAAP,CAAnC,CAAP,CACD,CAHM,CAKP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,EAAD,CAAcC,EAAd,CAA8B,CACrD,UACA,GAAMC,CAAAA,IAAI,CAAG,CAACD,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAAD,CAAWA,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAAX,CAAqBA,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAArB,CAAb,CACA,GAAME,CAAAA,IAAI,CAAG,CAACF,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAAD,CAAWA,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAAX,CAAqBA,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAArB,CAAb,CACA,GAAMG,CAAAA,IAAI,CAAG,CAACH,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAAD,CAAWA,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAAX,CAAqBA,EAAE,CAAC,CAAD,CAAF,CAAM,CAAN,CAArB,CAAb,CACA,MAAO,CACL,CAACR,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQE,IAAR,CAAL,CAAoBT,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQG,IAAR,CAAxB,CAAuCV,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQI,IAAR,CAA3C,CADK,CAEL,CAACX,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQE,IAAR,CAAL,CAAoBT,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQG,IAAR,CAAxB,CAAuCV,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQI,IAAR,CAA3C,CAFK,CAGL,CAACX,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQE,IAAR,CAAL,CAAoBT,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQG,IAAR,CAAxB,CAAuCV,IAAI,CAACO,EAAE,CAAC,CAAD,CAAH,CAAQI,IAAR,CAA3C,CAHK,CAAP,CAKD,CAVM,CAYP,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACR,CAAD,CAAgB,CAC3C,UACA,gBAAiBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAjB,MAA6BA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAA7B,MAAyCA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAzC,MAAqDA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAArD,MAAiEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAjE,MAA6EA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAA7E,KACD,CAHD,CAKA,MAAO,IAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,UAAD,CAA8B,CACrD,UACA,MAAOF,CAAAA,oBAAoB,CAACG,kBAAkB,CAACD,UAAD,CAAnB,CAA3B,CACD,CAHM,CAKP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACD,UAAD,CAA8B,CAC9D,UACA,MAAOA,CAAAA,UAAU,CAACE,MAAX,CAAkB,SAACC,GAAD,CAAMhD,SAAN,CAAoB,CAC3C,GAAID,YAAY,CAACC,SAAD,CAAhB,CAA6B,CAC3B,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAMhC,gBAAgB,CAAChB,SAAS,CAACiD,UAAX,CAAtB,CAAhB,CACD,CACD,GAAI7C,YAAY,CAACJ,SAAD,CAAhB,CAA6B,CAC3B,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAM9B,gBAAgB,CAAClB,SAAS,CAACkD,UAAX,CAAtB,CAAhB,CACD,CACD,GAAI7C,OAAO,CAACL,SAAD,CAAX,CAAwB,CACtB,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAM5B,WAAW,CAACpB,SAAS,CAACmD,KAAX,CAAjB,CAAhB,CACD,CACD,GAAI7C,QAAQ,CAACN,SAAD,CAAZ,CAAyB,CACvB,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAM1B,YAAY,CAACtB,SAAS,CAACoD,MAAX,CAAlB,CAAhB,CACD,CACD,GAAI7C,QAAQ,CAACP,SAAD,CAAZ,CAAyB,CACvB,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAMzB,YAAY,CAACvB,SAAS,CAACqD,MAAX,CAAlB,CAAhB,CACD,CACD,GAAI7C,OAAO,CAACR,SAAD,CAAX,CAAwB,CACtB,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAMxB,WAAW,CAAC/B,UAAU,CAACO,SAAS,CAACsD,KAAX,CAAX,CAAjB,CAAhB,CACD,CACD,GAAI7C,OAAO,CAACT,SAAD,CAAX,CAAwB,CACtB,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAMtB,WAAW,CAACjC,UAAU,CAACO,SAAS,CAACuD,KAAX,CAAX,CAAjB,CAAhB,CACD,CACD,GAAI7C,QAAQ,CAACV,SAAD,CAAZ,CAAyB,CACvB,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAMrB,aAAa,CAAClC,UAAU,CAACO,SAAS,CAACwD,MAAX,CAAX,CAAnB,CAAhB,CACD,CACD,GAAI7C,SAAS,CAACX,SAAD,CAAb,CAA0B,CACxB,MAAOqC,CAAAA,SAAS,CAACW,GAAD,CAAMrB,aAAa,CAAClC,UAAU,CAACO,SAAS,CAACyD,OAAX,CAAX,CAAnB,CAAhB,CACD,CACD,MAAO7C,CAAAA,eAAe,CAACZ,SAAD,CAAtB,CACD,CA7BM,CA6BJe,cA7BI,CAAP,CA8BD,CAhCM,CAkCP,GAAM2C,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,CAAiD,CACjE,UACA,MAAOA,CAAAA,GAAG,CAACC,MAAJ,GAAe,CAAf,EAAoBD,GAAG,CAAC,CAAD,CAAH,UAAkBE,CAAAA,KAA7C,CACD,CAHD,CAMA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACH,GAAD,CAAiC,CAC1D,UACA,GAAMxB,CAAAA,CAAC,CAAGuB,SAAS,CAACC,GAAD,CAAT,CAAiBA,GAAjB,CAAuBb,kBAAkB,CAACa,GAAD,CAAnD,CACA,GAAM9C,CAAAA,CAAC,CAAGsB,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAV,CACA,GAAM4B,CAAAA,CAAC,CAAG5B,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAV,CACA,GAAM6B,CAAAA,CAAC,CAAG7B,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAV,CACA,GAAM8B,CAAAA,CAAC,CAAG9B,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAV,CACA,GAAMc,CAAAA,UAAU,CAAGd,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAnB,CACA,GAAMe,CAAAA,UAAU,CAAGf,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAnB,CACA,GAAM+B,CAAAA,CAAC,CAAG,CAACrD,CAAC,CAAGoD,CAAL,EAAU,CAApB,CACA,GAAME,CAAAA,CAAC,CAAG,CAACtD,CAAC,CAAGoD,CAAL,EAAU,CAApB,CACA,GAAMG,CAAAA,CAAC,CAAG,CAACJ,CAAC,CAAGD,CAAL,EAAU,CAApB,CACA,GAAMM,CAAAA,CAAC,CAAG,CAACL,CAAC,CAAGD,CAAL,EAAU,CAApB,CACA,GAAMO,CAAAA,CAAC,CAAGzE,IAAI,CAAC0E,IAAL,CAAU1E,IAAI,CAAC2E,GAAL,CAASN,CAAT,CAAY,CAAZ,EAAiBrE,IAAI,CAAC2E,GAAL,CAASH,CAAT,CAAY,CAAZ,CAA3B,CAAV,CACA,GAAMI,CAAAA,CAAC,CAAG5E,IAAI,CAAC0E,IAAL,CAAU1E,IAAI,CAAC2E,GAAL,CAASL,CAAT,CAAY,CAAZ,EAAiBtE,IAAI,CAAC2E,GAAL,CAASJ,CAAT,CAAY,CAAZ,CAA3B,CAAV,CACA,GAAMhB,CAAAA,MAAM,CAAGkB,CAAC,CAAGG,CAAnB,CACA,GAAMpB,CAAAA,MAAM,CAAGiB,CAAC,CAAGG,CAAnB,CACA,GAAMC,CAAAA,EAAE,CAAG7E,IAAI,CAAC8E,KAAL,CAAWP,CAAX,CAAcD,CAAd,CAAX,CACA,GAAMS,CAAAA,EAAE,CAAG/E,IAAI,CAAC8E,KAAL,CAAWN,CAAX,CAAcH,CAAd,CAAX,CACA,GAAMW,CAAAA,KAAK,CAAG,CAACD,EAAE,CAAGF,EAAN,EAAY,CAA1B,CACA,GAAMI,CAAAA,GAAG,CAAG,CAACF,EAAE,CAAGF,EAAN,EAAY,CAAxB,CACA,MAAO,CACL,CAAEzB,UAAU,CAAVA,UAAF,CADK,CAEL,CAAEC,UAAU,CAAVA,UAAF,CAFK,CAGL,CAAEO,OAAO,CAAE,CAAC,CAAD,CAAKoB,KAAhB,CAHK,CAIL,CAAEzB,MAAM,CAANA,MAAF,CAJK,CAKL,CAAEC,MAAM,CAANA,MAAF,CALK,CAML,CAAEI,OAAO,CAAE,CAAC,CAAD,CAAKqB,GAAhB,CANK,CAAP,CAQD,CA7BM,CA+BP,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAC5C,CAAD,CAAgB,CAC/B,UACA,MAAO,CACL,CACEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAV,CAAoBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CADhC,CAEEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAF/B,CAGEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAH/B,CADK,CAML,CACEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAD/B,CAEEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAF/B,CAGEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAH/B,CANK,CAWL,CACEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAD/B,CAEEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAF/B,CAGEA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,CAAmBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAU,CAAC,CAAD,EAAI,CAAJ,CAH/B,CAXK,CAAP,CAiBD,CAnBD,CAiCA,GAAM6C,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAuC,CAC3D,UAD2D,GAApCC,CAAAA,EAAoC,MAApCA,EAAoC,CAAhCC,EAAgC,MAAhCA,EAAgC,CAA5BC,EAA4B,MAA5BA,EAA4B,CAAxBC,EAAwB,MAAxBA,EAAwB,CAE3D,GAAMjD,CAAAA,CAAC,CAAG,CACR,CAAC8C,EAAE,CAAChE,CAAJ,CAAOiE,EAAE,CAACjE,CAAV,CAAakE,EAAE,CAAClE,CAAhB,CADQ,CAER,CAACgE,EAAE,CAAC9D,CAAJ,CAAO+D,EAAE,CAAC/D,CAAV,CAAagE,EAAE,CAAChE,CAAhB,CAFQ,CAGR,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAHQ,CAAV,CAKA,GAAMiB,CAAAA,CAAC,CAAGF,aAAa,CAAC6C,QAAQ,CAAC5C,CAAD,CAAT,CAAc,CAACiD,EAAE,CAACnE,CAAJ,CAAOmE,EAAE,CAACjE,CAAV,CAAa,CAAb,CAAd,CAAvB,CACA,MAAOkB,CAAAA,SAAS,CAACF,CAAD,CAAI,CAClB,CAACC,CAAC,CAAC,CAAD,CAAF,CAAO,CAAP,CAAU,CAAV,CADkB,CAElB,CAAC,CAAD,CAAIA,CAAC,CAAC,CAAD,CAAL,CAAU,CAAV,CAFkB,CAGlB,CAAC,CAAD,CAAI,CAAJ,CAAOA,CAAC,CAAC,CAAD,CAAR,CAHkB,CAAJ,CAAhB,CAKD,CAbD,CAkBA,MAAO,IAAMiD,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAwB,CACjD,UACA,GAAMjE,CAAAA,CAAC,CAAG2D,aAAa,CAACM,MAAM,CAACC,MAAR,CAAvB,CACA,GAAMtB,CAAAA,CAAC,CAAGe,aAAa,CAACM,MAAM,CAACE,SAAR,CAAvB,CACA,GAAMC,CAAAA,CAAC,CAAGpD,SAAS,CAAC4B,CAAD,CAAIc,QAAQ,CAAC1D,CAAD,CAAZ,CAAnB,CACA,MAAO,CACL,CAACoE,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAX,CAAoBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAA9B,CAAuCA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAjD,CADK,CAEL,CAACA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAX,CAAoBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAA9B,CAAuCA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAjD,CAFK,CAGL,CAACA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAX,CAAoBA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAA9B,CAAuC,CAAvC,CAHK,CAAP,CAKD,CAVM"}