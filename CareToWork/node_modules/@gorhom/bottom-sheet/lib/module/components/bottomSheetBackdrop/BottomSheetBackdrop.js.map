{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["React","memo","useCallback","useMemo","useRef","Animated","interpolate","Extrapolate","useAnimatedStyle","useAnimatedReaction","useAnimatedGestureHandler","runOnJS","TapGestureHandler","useBottomSheet","DEFAULT_OPACITY","DEFAULT_APPEARS_ON_INDEX","DEFAULT_DISAPPEARS_ON_INDEX","DEFAULT_ENABLE_TOUCH_THROUGH","DEFAULT_PRESS_BEHAVIOR","styles","BottomSheetBackdropComponent","animatedIndex","opacity","_providedOpacity","appearsOnIndex","_providedAppearsOnIndex","disappearsOnIndex","_providedDisappearsOnIndex","enableTouchThrough","_providedEnableTouchThrough","pressBehavior","style","children","snapToIndex","close","containerRef","pointerEvents","handleOnPress","handleContainerTouchability","shouldDisableTouchability","current","setNativeProps","gestureHandler","onFinish","containerAnimatedStyle","value","CLAMP","flex","containerStyle","container","previous","BottomSheetBackdrop","displayName"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useRef } from 'react';\nimport Animated, {\n  interpolate,\n  Extrapolate,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  useAnimatedGestureHandler,\n  runOnJS,\n} from 'react-native-reanimated';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { useBottomSheet } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n  DEFAULT_PRESS_BEHAVIOR,\n} from './constants';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity: _providedOpacity,\n  appearsOnIndex: _providedAppearsOnIndex,\n  disappearsOnIndex: _providedDisappearsOnIndex,\n  enableTouchThrough: _providedEnableTouchThrough,\n  pressBehavior = DEFAULT_PRESS_BEHAVIOR,\n  style,\n  children,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { snapToIndex, close } = useBottomSheet();\n  //#endregion\n\n  //#region defaults\n  const opacity = _providedOpacity ?? DEFAULT_OPACITY;\n  const appearsOnIndex = _providedAppearsOnIndex ?? DEFAULT_APPEARS_ON_INDEX;\n  const disappearsOnIndex =\n    _providedDisappearsOnIndex ?? DEFAULT_DISAPPEARS_ON_INDEX;\n  const enableTouchThrough =\n    _providedEnableTouchThrough ?? DEFAULT_ENABLE_TOUCH_THROUGH;\n  //#endregion\n\n  //#region variables\n  const containerRef = useRef<Animated.View>(null);\n  const pointerEvents = enableTouchThrough ? 'none' : 'auto';\n  //#endregion\n\n  //#region callbacks\n  const handleOnPress = useCallback(() => {\n    if (pressBehavior === 'close') {\n      close();\n    } else if (pressBehavior === 'collapse') {\n      snapToIndex(disappearsOnIndex as number);\n    } else if (typeof pressBehavior === 'number') {\n      snapToIndex(pressBehavior);\n    }\n  }, [snapToIndex, close, disappearsOnIndex, pressBehavior]);\n  const handleContainerTouchability = useCallback(\n    (shouldDisableTouchability: boolean) => {\n      if (!containerRef.current) {\n        return;\n      }\n      // @ts-ignore\n      containerRef.current.setNativeProps({\n        pointerEvents: shouldDisableTouchability ? 'none' : 'auto',\n      });\n    },\n    []\n  );\n  //#endregion\n\n  //#region tap gesture\n  const gestureHandler =\n    useAnimatedGestureHandler<TapGestureHandlerGestureEvent>(\n      {\n        onFinish: () => {\n          runOnJS(handleOnPress)();\n        },\n      },\n      [handleOnPress]\n    );\n  //#endregion\n\n  //#region styles\n  const containerAnimatedStyle = useAnimatedStyle(() => ({\n    opacity: interpolate(\n      animatedIndex.value,\n      [-1, disappearsOnIndex, appearsOnIndex],\n      [0, 0, opacity],\n      Extrapolate.CLAMP\n    ),\n    flex: 1,\n  }));\n  const containerStyle = useMemo(\n    () => [styles.container, style, containerAnimatedStyle],\n    [style, containerAnimatedStyle]\n  );\n  //#endregion\n\n  //#region effects\n  useAnimatedReaction(\n    () => animatedIndex.value <= disappearsOnIndex,\n    (shouldDisableTouchability, previous) => {\n      if (shouldDisableTouchability === previous) {\n        return;\n      }\n      runOnJS(handleContainerTouchability)(shouldDisableTouchability);\n    },\n    [disappearsOnIndex]\n  );\n  //#endregion\n\n  return pressBehavior !== 'none' ? (\n    <TapGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View\n        ref={containerRef}\n        style={containerStyle}\n        accessible={true}\n        accessibilityRole=\"button\"\n        accessibilityLabel=\"Bottom Sheet backdrop\"\n        accessibilityHint={`Tap to ${\n          typeof pressBehavior === 'string' ? pressBehavior : 'move'\n        } the Bottom Sheet`}\n      >\n        {children}\n      </Animated.View>\n    </TapGestureHandler>\n  ) : (\n    <Animated.View\n      ref={containerRef}\n      pointerEvents={pointerEvents}\n      style={containerStyle}\n    >\n      {children}\n    </Animated.View>\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent);\nBottomSheetBackdrop.displayName = 'BottomSheetBackdrop';\n\nexport default BottomSheetBackdrop;\n"]}