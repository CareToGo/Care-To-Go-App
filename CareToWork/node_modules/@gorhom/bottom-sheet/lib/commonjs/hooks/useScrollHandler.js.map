{"version":3,"sources":["useScrollHandler.ts"],"names":["useScrollHandler","useScrollEventsHandlers","useScrollEventsHandlersDefault","scrollableRef","scrollableContentOffsetY","handleOnScroll","noop","handleOnBeginDrag","handleOnEndDrag","handleOnMomentumEnd","handleOnMomentumBegin","scrollHandler","onScroll","onBeginDrag","onEndDrag","onMomentumBegin","onMomentumEnd"],"mappings":";;;;;;;AAAA;;AAKA;;AACA;;AAGO,MAAMA,gBAAgB,GAAG,CAC9BC,uBAAuB,GAAGC,8DADI,KAE3B;AACH;AACA,QAAMC,aAAa,GAAG,4CAAtB,CAFG,CAIH;;AACA,QAAMC,wBAAwB,GAAG,2CAAuB,CAAvB,CAAjC,CALG,CAOH;;AACA,QAAM;AACJC,IAAAA,cAAc,GAAGC,sBADb;AAEJC,IAAAA,iBAAiB,GAAGD,sBAFhB;AAGJE,IAAAA,eAAe,GAAGF,sBAHd;AAIJG,IAAAA,mBAAmB,GAAGH,sBAJlB;AAKJI,IAAAA,qBAAqB,GAAGJ;AALpB,MAMFL,uBAAuB,CAACE,aAAD,EAAgBC,wBAAhB,CAN3B,CARG,CAgBH;;AACA,QAAMO,aAAa,GAAG,qDACpB;AACEC,IAAAA,QAAQ,EAAEP,cADZ;AAEEQ,IAAAA,WAAW,EAAEN,iBAFf;AAGEO,IAAAA,SAAS,EAAEN,eAHb;AAIEO,IAAAA,eAAe,EAAEL,qBAJnB;AAKEM,IAAAA,aAAa,EAAEP;AALjB,GADoB,EAQpB,CACEJ,cADF,EAEEE,iBAFF,EAGEC,eAHF,EAIEE,qBAJF,EAKED,mBALF,CARoB,CAAtB;AAiBA,SAAO;AAAEE,IAAAA,aAAF;AAAiBR,IAAAA,aAAjB;AAAgCC,IAAAA;AAAhC,GAAP;AACD,CArCM","sourcesContent":["import {\n  useAnimatedRef,\n  useAnimatedScrollHandler,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport { useScrollEventsHandlersDefault } from './useScrollEventsHandlersDefault';\nimport { workletNoop as noop } from '../utilities';\nimport type { Scrollable } from '../types';\n\nexport const useScrollHandler = (\n  useScrollEventsHandlers = useScrollEventsHandlersDefault\n) => {\n  // refs\n  const scrollableRef = useAnimatedRef<Scrollable>();\n\n  // variables\n  const scrollableContentOffsetY = useSharedValue<number>(0);\n\n  // hooks\n  const {\n    handleOnScroll = noop,\n    handleOnBeginDrag = noop,\n    handleOnEndDrag = noop,\n    handleOnMomentumEnd = noop,\n    handleOnMomentumBegin = noop,\n  } = useScrollEventsHandlers(scrollableRef, scrollableContentOffsetY);\n\n  // callbacks\n  const scrollHandler = useAnimatedScrollHandler(\n    {\n      onScroll: handleOnScroll,\n      onBeginDrag: handleOnBeginDrag,\n      onEndDrag: handleOnEndDrag,\n      onMomentumBegin: handleOnMomentumBegin,\n      onMomentumEnd: handleOnMomentumEnd,\n    },\n    [\n      handleOnScroll,\n      handleOnBeginDrag,\n      handleOnEndDrag,\n      handleOnMomentumBegin,\n      handleOnMomentumEnd,\n    ]\n  );\n\n  return { scrollHandler, scrollableRef, scrollableContentOffsetY };\n};\n"]}